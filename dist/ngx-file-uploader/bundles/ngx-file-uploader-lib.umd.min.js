!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-file-uploader-lib",["exports","@angular/core","@angular/forms","@angular/common"],n):n(e["ngx-file-uploader-lib"]={},e.ng.core,e.ng.forms,e.ng.common)}(this,function(e,n,t,i){"use strict";var o=function(){function e(){}return e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=n.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),r=function(){},a=function(){function e(){this.fileChanged=new n.EventEmitter,this.onClear=new n.EventEmitter,this.uploading=!1,this.innerValue="",this.onTouchedCallback=r,this.onChangeCallback=r}return Object.defineProperty(e.prototype,"value",{get:function(){return this.innerValue},set:function(e){e!==this.innerValue&&(this.innerValue=e,this.onChangeCallback(e))},enumerable:!0,configurable:!0}),e.prototype.writeValue=function(e){e!==this.innerValue&&(this.innerValue=e,this.onChangeCallback(this.value))},e.prototype.registerOnChange=function(e){this.onChangeCallback=e},e.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},e.prototype.onBlur=function(){this.onTouchedCallback()},e.prototype.onChange=function(e){var o=this,n=e.srcElement.files;this.uploading=!0;var t=n[0],r=new FileReader;r.onload=function(e){var n=r.result,t=n.toString().substring("data:image/".length,n.toString().indexOf(";base64")),i={data:n,extension:t};o.fileChanged.emit(i)},r.readAsDataURL(t)},e.prototype.clear=function(){this.value="",this.onClear.emit(),this.onChangeCallback(this.value)},e.decorators=[{type:n.Component,args:[{selector:"file-uploader",template:'<div>\n    <div class="input-group">\n      <input type="text" class="form-control" readonly [(ngModel)]="value">\n      <div class="input-group-btn">\n  \n        <div class="btn btn-default image-preview-input">\n          <span class="glyphicon glyphicon-folder-open"></span>\n          <span class="image-preview-input-title">Take Photo / Select File</span>\n          <input type="file" onclick="value = null" accept="image/png, image/jpeg, image/gif" (blur)="onBlur()" name="input-file-preview" (change)="onChange($event)"\n          />\n        </div>\n        <button *ngIf="value" type="button"  (click)="clear()" class="btn btn-default image-preview-clear">\n                          <span class="glyphicon glyphicon-remove"></span> Clear\n      </button>\n      </div>\n    </div>\n  </div>',providers:[{provide:t.NG_VALUE_ACCESSOR,useExisting:n.forwardRef(function(){return e}),multi:!0}],styles:[".btn-file{position:relative;overflow:hidden}.btn-file input[type=file]{position:absolute;top:0;right:0;min-width:100%;min-height:100%;font-size:100px;text-align:right;opacity:0;outline:0;background:#fff;cursor:inherit;display:block}#img-upload{width:100%}.image-preview-input input[type=file]{position:absolute;top:0;right:0;margin:0;padding:0;font-size:20px;cursor:pointer;opacity:0}"]}]}],e.propDecorators={source:[{type:n.Input}],fileChanged:[{type:n.Output}],onClear:[{type:n.Output}]},e}(),l=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule,t.FormsModule],declarations:[a],exports:[a]}]}],e}();e.NgxFileUploaderService=o,e.NgxFileUploaderComponent=a,e.NgxFileUploaderModule=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-file-uploader-lib.umd.min.js.map
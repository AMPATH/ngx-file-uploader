{"version":3,"sources":["ng://ngx-file-uploader-lib/lib/ngx-file-uploader.service.ts","ng://ngx-file-uploader-lib/lib/ngx-file-uploader.component.ts","ng://ngx-file-uploader-lib/lib/ngx-file-uploader.module.ts"],"names":["NgxFileUploaderService","Injectable","args","providedIn","noop","NgxFileUploaderComponent","this","fileChanged","EventEmitter","onClear","uploading","innerValue","onTouchedCallback","onChangeCallback","Object","defineProperty","prototype","v","writeValue","value","registerOnChange","fn","registerOnTouched","onBlur","onChange","event","_this","files","srcElement","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","data","result","fileType","toString","substring","length","indexOf","payload","extension","emit","readAsDataURL","clear","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Input","Output","NgxFileUploaderModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"2YAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCIMC,EAAO,0BAGb,SAAAC,IAamBC,KAAAC,YAAiC,IAAIC,EAAAA,aACrCF,KAAAG,QAA6B,IAAID,EAAAA,aAE3CF,KAAAI,WAAY,EAEXJ,KAAAK,WAAkB,GAIlBL,KAAAM,kBAAgCR,EAChCE,KAAAO,iBAAqCT,EA8D/C,OA3DEU,OAAAC,eAAIV,EAAAW,UAAA,QAAK,KAAT,WACE,OAAOV,KAAKK,gBAId,SAAUM,GACJA,IAAMX,KAAKK,aACbL,KAAKK,WAAaM,EAClBX,KAAKO,iBAAiBI,qCAKnBZ,EAAAW,UAAAE,WAAP,SAAkBC,GACZA,IAAUb,KAAKK,aACjBL,KAAKK,WAAaQ,EAClBb,KAAKO,iBAAiBP,KAAKa,SAKxBd,EAAAW,UAAAI,iBAAP,SAAwBC,GACtBf,KAAKO,iBAAmBQ,GAInBhB,EAAAW,UAAAM,kBAAP,SAAyBD,GACvBf,KAAKM,kBAAoBS,GAIpBhB,EAAAW,UAAAO,OAAP,WACEjB,KAAKM,qBAGAP,EAAAW,UAAAQ,SAAP,SAAgBC,GAAhB,IAAAC,EAAApB,KACQqB,EAAQF,EAAMG,WAAWD,MAC/BrB,KAAKI,WAAY,MACXmB,EAAaF,EAAM,GAEnBG,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACC,OACbC,EAAOJ,EAAWK,OAClBC,EAAWF,EAAKG,WAAWC,UAAU,cAAcC,OAAQL,EAAKG,WAAWG,QAAQ,YACnFC,EAAU,CACdP,KAAIA,EACJQ,UAAWN,GAEbV,EAAKnB,YAAYoC,KAAKF,IAGxBX,EAAWc,cAAcf,IAGpBxB,EAAAW,UAAA6B,MAAP,WACEvC,KAAKa,MAAQ,GACbb,KAAKG,QAAQkC,OACbrC,KAAKO,iBAAiBP,KAAKa,4BAnF9B2B,EAAAA,UAAS5C,KAAA,CAAC,CACT6C,SAAU,gBAEVC,SAAA,qyBACAC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAhD,IAA2BiD,OAAO,obAKnEC,EAAAA,2BACAC,EAAAA,wBACAA,EAAAA,UAuEHnD,KC5FAoD,EAAA,WAMA,SAAAA,KAOqC,2BAPpCC,EAAAA,SAAQxD,KAAA,CAAC,CACRyD,QAAS,CACPC,EAAAA,aAAaC,EAAAA,aAEfC,aAAc,CAACzD,GACf0D,QAAS,CAAC1D,OAEyBoD,EAbrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFileUploaderService {\n\n  constructor() { }\n}\n","import {\n  Component, Input, forwardRef, Output, EventEmitter\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nconst noop = () => {\n};\n\n@Component({\n  selector: 'file-uploader',\n  styleUrls: ['./ngx-file-uploader.component.css'],\n  templateUrl: './ngx-file-uploader.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxFileUploaderComponent), multi: true\n    }\n  ]\n})\nexport class NgxFileUploaderComponent implements ControlValueAccessor {\n  @Input() public source: any;\n  @Output() public fileChanged: EventEmitter<any> = new EventEmitter();\n  @Output() public onClear: EventEmitter<any> = new EventEmitter();\n  public _imagePath: string;\n  public uploading = false;\n  // The internal data model\n  private innerValue: any = '';\n\n  // Placeholders for the callbacks which are later providesd\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // Current time string.\n\n  public writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n      this.onChangeCallback(this.value);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  \n\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n  public onChange(event: any) {\n    const files = event.srcElement.files;\n    this.uploading = true;\n    const fileToLoad = files[0];\n\n    const fileReader = new FileReader();\n    fileReader.onload = (fileLoadedEvent) => {\n      const data = fileReader.result;\n      const fileType = data.toString().substring('data:image/'.length, data.toString().indexOf(';base64'));\n      const payload = {\n        data,\n        extension: fileType\n      };\n      this.fileChanged.emit(payload);\n    };\n\n    fileReader.readAsDataURL(fileToLoad);\n  }\n\n  public clear() {\n    this.value = '';\n    this.onClear.emit();\n    this.onChangeCallback(this.value);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxFileUploaderComponent } from './ngx-file-uploader.component';\n\n@NgModule({\n  imports: [\n    CommonModule,FormsModule\n  ],\n  declarations: [NgxFileUploaderComponent],\n  exports: [NgxFileUploaderComponent]\n})\nexport class NgxFileUploaderModule { }\n"]}